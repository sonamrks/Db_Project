import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.imageio.ImageIO;
import javax.swing.JPanel;


public class RImagePanel32 extends JPanel{

	private static final long serialVersionUID = 1L;
	BufferedImage myPicture=null;
    static int X, Y;
    ArrayList<Integer> al1=new ArrayList<Integer>();
    ArrayList<Integer> values=new ArrayList<Integer>();

	public RImagePanel32(ArrayList<Integer> a){
		
		al1=a;		
	try {
	myPicture = ImageIO.read(new File("/home/asahu/sonamHW3/HW3/map.JPG"));
	}
	catch (IOException ex) {
        ex.getMessage();
        
    }
	}

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
    	g.drawImage(myPicture,0,0,820,580,this);
    	g.setColor(Color.red);
	    String tmp="";
	    for(int q=0;q<al1.size();q++){
	    tmp=tmp+Integer.toString(al1.get(q));
	    	if(q<al1.size()-1){
	    		tmp=tmp+",";
	    	}
	    }
	    int[] x1=new int[al1.size()/2];
	    int[] y1=new int[al1.size()/2];

    	for(int i=0;i<al1.size();){
    		for(int k=0;k<al1.size()/2;k++){
    		x1[k]=al1.get(i);
    			i=i+2;
    		}
    	} 
    	for(int i=1;i<al1.size();){
    		for(int k=0;k<al1.size()/2;k++){
    		y1[k]=al1.get(i);
    			i=i+2;
    		}
		}
    	g.drawPolygon(x1, y1, x1.length);
    	g.setColor(Color.yellow);
    	  	   	  
  	RangeQuery2 rq=new RangeQuery2();
  	ArrayList<Integer> p=rq.Values(tmp);
	
  	int[] cd=new int[p.size()];
	for(int i=0;i<p.size();i++){
		cd[i]=al1.get(i);
		System.out.println(cd[i]);
	} 
	for(int q=0;q<cd.length;){
		int h=cd[q];
		int r=cd[q+1];
        g.setColor(Color.blue);
        g.drawOval(h, r, 3, 3);
        q=q+2;		
	}
  	  
        }

}	



